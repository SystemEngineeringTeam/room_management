{"remainingRequest":"/Users/x19053/Git/roomManagement/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/x19053/Git/roomManagement/vue/src/components/hoge.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/x19053/Git/roomManagement/vue/src/components/hoge.vue","mtime":1602673947839},{"path":"/Users/x19053/Git/roomManagement/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/x19053/Git/roomManagement/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/x19053/Git/roomManagement/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/x19053/Git/roomManagement/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSG9nZScsCiAgZGF0YTogKCk9Pih7CiAgICBmcm06ewogICAgICBOYW1lOicnLAogICAgICBQYXNzd29yZDonJywKICAgICAgU3R1ZGVudG51bWJlcjonJywKICAgICAgRW1haWw6JycsCiAgICAgIFVJRDonJwogICAgfQogIH0pLAogIG1ldGhvZHM6ewogICAgcmVnaXN0KCl7CiAgICAgIC8vIGpzb27jgpLpgIHkv6HjgZnjgosKICAgICAgdmFyIHJlcVBvc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgICAgcmVxUG9zdC5vcGVuKCdQT1NUJywnLi91c2VyOjgwODEnLHRydWUpOy8vIGFwaeOBq+mAgeOCi+ODquOCr+OCqOOCueODiOOBrlVSTOaMh+WumgogICAgICByZXFQb3N0LnNldFJlcXVlc3RIZWFkZXIoJ0NvbnRlbnQtVHlwZScsJ2FwcGxpY2F0aW9uL2pzb24nKTsKICAgICAgcmVxUG9zdC5zZW5kKEpTT04uc3RyaW5naWZ5KHRoaXMuZnJtKSk7CiAgICB9LAogICAgZ2V0anNvbigpewogICAgICAvLyBqc29u44Gu5Y+W5b6XKC91c2VyKQogICAgICB2YXIgcmVxZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CiAgICAgIHZhciB1c2VyRGF0YTsKICAgICAgcmVxZXN0Lm9wZW4oJ0dFVCcsJ2xvY2FsaG9zdDo4MDgxL3VzZXInLHRydWUpOy8vIGFwaeOBq+mAgeOCi+ODquOCr+OCqOOCueODiOOBrlVSTOaMh+WumgogICAgICByZXFlc3QucmVzcG9uc2VUeXBlID0gJ2pzb24nOwogICAgICByZXFlc3Qub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgdXNlckRhdGEgPSB0aGlzLnJlc3BvbnNlOwogICAgICAgICAgd2luZG93LmFsZXJ0KHVzZXJEYXRhKTsKICAgICAgfQogICAgICByZXFlc3Quc2VuZCgpOwogICAgfQogIH0KICAsCn0K"},{"version":3,"sources":["hoge.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"hoge.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"hoge\">\n            <label for=\"name\">名前</label>\n            <input type=\"text\" id=\"name\" v-model=\"frm.Name\">\n            <br>\n            <label for=\"pass\">パスワード</label>\n            <input type=\"password\" v-model=\"frm.Password\">\n            <br>\n            <label for=\"strNum\">学籍番号</label>\n            <input type=\"text\" id=\"strNum\" v-model=\"frm.Studentnumber\">\n            <br>\n            <label for=\"Email\">メアド</label>\n            <input type=\"email\" id=\"email\" v-model=\"frm.Email\">\n            <br>\n            <!-- <input type=\"hidden\" v-model=\"frm.UID\"> -->\n            <label>UID(通常は隠しておく)</label>\n            <input type=\"text\" v-model=\"frm.UID\">\n            <br>\n            <button @click=\"regist\">登録</button>\n            <button @click=\"getjson\">json取得</button>\n\n    </div>\n    <!-- <script>\n        // // jsonの取得(/user)\n        // var reqest = new XMLHttpRequest();\n        // var userData;\n        // reqest.open('GET','/user',true);// apiに送るリクエストのURL指定\n        // reqest.responseType = 'json';\n        // reqest.onload = function () {\n        //     useData = this.response;\n        // }\n        // reqest.send();\n    </script> -->\n    <!-- <script>\n        new Vue({\n            el:\"#app\",\n            data:{\n                // POSTで送信するJSONの要素\n                frm:{\n                    Studentnumber:\"\",\n                    Email:\"\",\n                    Password:\"\",\n                    Name:\"\",\n                    UID:\"\",\n                },\n            },\n            methods:{\n                regist(){\n                    // jsonを送信する\n                    var reqPost = new XMLHttpRequest();\n                    reqPost.open('POST','/user',true);// apiに送るリクエストのURL指定\n                    reqPost.setRequestHeader('Content-Type','application/json');\n                    reqPost.send(JSON.stringify(this.frm));\n                }\n            },\n        })\n    </script> -->\n</template>\n<script>\nexport default {\n  name: 'Hoge',\n  data: ()=>({\n    frm:{\n      Name:'',\n      Password:'',\n      Studentnumber:'',\n      Email:'',\n      UID:''\n    }\n  }),\n  methods:{\n    regist(){\n      // jsonを送信する\n      var reqPost = new XMLHttpRequest();\n      reqPost.open('POST','./user:8081',true);// apiに送るリクエストのURL指定\n      reqPost.setRequestHeader('Content-Type','application/json');\n      reqPost.send(JSON.stringify(this.frm));\n    },\n    getjson(){\n      // jsonの取得(/user)\n      var reqest = new XMLHttpRequest();\n      var userData;\n      reqest.open('GET','localhost:8081/user',true);// apiに送るリクエストのURL指定\n      reqest.responseType = 'json';\n      reqest.onload = function () {\n          userData = this.response;\n          window.alert(userData);\n      }\n      reqest.send();\n    }\n  }\n  ,\n}\n</script>"]}]}